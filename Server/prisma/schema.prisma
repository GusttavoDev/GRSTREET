// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id            String   @id @default(cuid())
  token         String
  name          String
  email         String   @unique
  password      String
  storeName     String
  storeLogo     String
}

model User {
  id            String   @id @default(cuid())
  token         String
  email         String   @unique
  password      String
  name          String
  cpf           Int
  profile_img   String   @default("CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg")
  country       String
  state         String
  city          String
  neighborhood  String
  street        String
  number        Int
  cep           Int
  purchases     Purchase[]
  reviews       Review[]
  cart          Cart[]
}

model Purchase {
  id             String   @id @default(cuid())
  userId         String
  products       ProductPurchase[]
  payment_method String
  status         String
  date           DateTime

  User User @relation(fields: [userId], references: [id])
}

model ProductPurchase {
  id             String   @id @default(cuid())
  name           String
  description    String
  price          Int
  stock          Int
  category       String
  sub_category   String
  color          String
  quantity       Int

  Purchase Purchase @relation(fields: [id], references: [id])
}

model Product {
  id                String   @id @default(cuid())
  name              String
  description       String
  categoryId        String
  subCategoryId     String
  relatedProducts   String[]
  images            String[]
  reviews           Review[]
  colors            Color[]
  cartItems         CartItem[]
}

model Category {
  id            String   @id @default(cuid())
  name          String
  subcategories SubCategory[]
}

model SubCategory {
  id          String   @id @default(cuid())
  name        String
  categoryId  String

  Category Category @relation(fields: [categoryId], references: [id])
}

model Color {
  id         String   @id @default(cuid())
  product    Product  @relation(fields: [product_id], references: [id])
  product_id String
  name       String
  price      Float
  stock      Int
  images     String[]
}

model Review {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  product    Product  @relation(fields: [product_id], references: [id])
  product_id String
  comment    String
  stars      Int
}

model Cart {
  id       String   @id @default(cuid())
  userId   String
  items    CartItem[]
  total    Int

  User User @relation(fields: [userId], references: [id])
}

model CartItem {
  id        String   @id @default(cuid())
  cartId    String
  productId String
  quantity  Int
  price     Int

  Cart     Cart     @relation(fields: [cartId], references: [id])
  Product  Product  @relation(fields: [productId], references: [id])
}
